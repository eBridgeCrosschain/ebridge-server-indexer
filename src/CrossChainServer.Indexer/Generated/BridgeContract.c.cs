// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bridge_contract.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.Bridge {

  #region Events
  public partial class SwapRatioChanged : aelf::IEvent<SwapRatioChanged>
  {
    public global::System.Collections.Generic.IEnumerable<SwapRatioChanged> GetIndexed()
    {
      return new List<SwapRatioChanged>
      {
      };
    }

    public SwapRatioChanged GetNonIndexed()
    {
      return new SwapRatioChanged
      {
        SwapId = SwapId,
        NewSwapRatio = NewSwapRatio,
        TargetTokenSymbol = TargetTokenSymbol,
      };
    }
  }

  public partial class TokenSwapped : aelf::IEvent<TokenSwapped>
  {
    public global::System.Collections.Generic.IEnumerable<TokenSwapped> GetIndexed()
    {
      return new List<TokenSwapped>
      {
      };
    }

    public TokenSwapped GetNonIndexed()
    {
      return new TokenSwapped
      {
        Address = Address,
        Amount = Amount,
        Symbol = Symbol,
        ReceiptId = ReceiptId,
        FromChainId = FromChainId,
      };
    }
  }

  public partial class SwapInfoAdded : aelf::IEvent<SwapInfoAdded>
  {
    public global::System.Collections.Generic.IEnumerable<SwapInfoAdded> GetIndexed()
    {
      return new List<SwapInfoAdded>
      {
      };
    }

    public SwapInfoAdded GetNonIndexed()
    {
      return new SwapInfoAdded
      {
        SwapId = SwapId,
        FromChainId = FromChainId,
        Symbol = Symbol,
      };
    }
  }

  public partial class TokenWhitelistAdded : aelf::IEvent<TokenWhitelistAdded>
  {
    public global::System.Collections.Generic.IEnumerable<TokenWhitelistAdded> GetIndexed()
    {
      return new List<TokenWhitelistAdded>
      {
      };
    }

    public TokenWhitelistAdded GetNonIndexed()
    {
      return new TokenWhitelistAdded
      {
        ChainTokenList = ChainTokenList,
      };
    }
  }

  public partial class TokenWhitelistRemoved : aelf::IEvent<TokenWhitelistRemoved>
  {
    public global::System.Collections.Generic.IEnumerable<TokenWhitelistRemoved> GetIndexed()
    {
      return new List<TokenWhitelistRemoved>
      {
      };
    }

    public TokenWhitelistRemoved GetNonIndexed()
    {
      return new TokenWhitelistRemoved
      {
        ChainTokenList = ChainTokenList,
      };
    }
  }

  public partial class ReceiptCreated : aelf::IEvent<ReceiptCreated>
  {
    public global::System.Collections.Generic.IEnumerable<ReceiptCreated> GetIndexed()
    {
      return new List<ReceiptCreated>
      {
      };
    }

    public ReceiptCreated GetNonIndexed()
    {
      return new ReceiptCreated
      {
        ReceiptId = ReceiptId,
        Symbol = Symbol,
        Owner = Owner,
        TargetAddress = TargetAddress,
        Amount = Amount,
        TargetChainId = TargetChainId,
      };
    }
  }

  #endregion
}
#endregion

