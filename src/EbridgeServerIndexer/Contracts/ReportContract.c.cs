// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: report_contract.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace EBridge.Contracts.Report {

  #region Events
  public partial class ReportProposed : aelf::IEvent<ReportProposed>
  {
    public global::System.Collections.Generic.IEnumerable<ReportProposed> GetIndexed()
    {
      return new List<ReportProposed>
      {
      };
    }

    public ReportProposed GetNonIndexed()
    {
      return new ReportProposed
      {
        RawReport = RawReport,
        RegimentId = RegimentId,
        Token = Token,
        RoundId = RoundId,
        QueryInfo = QueryInfo,
        TargetChainId = TargetChainId,
      };
    }
  }

  public partial class ReportConfirmed : aelf::IEvent<ReportConfirmed>
  {
    public global::System.Collections.Generic.IEnumerable<ReportConfirmed> GetIndexed()
    {
      return new List<ReportConfirmed>
      {
      };
    }

    public ReportConfirmed GetNonIndexed()
    {
      return new ReportConfirmed
      {
        RoundId = RoundId,
        Signature = Signature,
        RegimentId = RegimentId,
        Token = Token,
        IsAllNodeConfirmed = IsAllNodeConfirmed,
        TargetChainId = TargetChainId,
      };
    }
  }

  public partial class OffChainAggregationRegistered : aelf::IEvent<OffChainAggregationRegistered>
  {
    public global::System.Collections.Generic.IEnumerable<OffChainAggregationRegistered> GetIndexed()
    {
      return new List<OffChainAggregationRegistered>
      {
      };
    }

    public OffChainAggregationRegistered GetNonIndexed()
    {
      return new OffChainAggregationRegistered
      {
        Token = Token,
        OffChainQueryInfoList = OffChainQueryInfoList,
        RegimentId = RegimentId,
        ConfigDigest = ConfigDigest,
        AggregateThreshold = AggregateThreshold,
        AggregatorContractAddress = AggregatorContractAddress,
        ChainId = ChainId,
        Register = Register,
        AggregateOption = AggregateOption,
      };
    }
  }

  public partial class MerkleReportNodeAdded : aelf::IEvent<MerkleReportNodeAdded>
  {
    public global::System.Collections.Generic.IEnumerable<MerkleReportNodeAdded> GetIndexed()
    {
      return new List<MerkleReportNodeAdded>
      {
      };
    }

    public MerkleReportNodeAdded GetNonIndexed()
    {
      return new MerkleReportNodeAdded
      {
        Token = Token,
        NodeIndex = NodeIndex,
        NodeRoundId = NodeRoundId,
        AggregatedData = AggregatedData,
      };
    }
  }

  public partial class OffChainQueryInfoAdded : aelf::IEvent<OffChainQueryInfoAdded>
  {
    public global::System.Collections.Generic.IEnumerable<OffChainQueryInfoAdded> GetIndexed()
    {
      return new List<OffChainQueryInfoAdded>
      {
      };
    }

    public OffChainQueryInfoAdded GetNonIndexed()
    {
      return new OffChainQueryInfoAdded
      {
        Token = Token,
        ChainId = ChainId,
        OffChainQueryInfo = OffChainQueryInfo,
        Sender = Sender,
      };
    }
  }

  public partial class OffChainQueryInfoRemoved : aelf::IEvent<OffChainQueryInfoRemoved>
  {
    public global::System.Collections.Generic.IEnumerable<OffChainQueryInfoRemoved> GetIndexed()
    {
      return new List<OffChainQueryInfoRemoved>
      {
      };
    }

    public OffChainQueryInfoRemoved GetNonIndexed()
    {
      return new OffChainQueryInfoRemoved
      {
        Token = Token,
        ChainId = ChainId,
        RemoveNodeIndex = RemoveNodeIndex,
        Sender = Sender,
      };
    }
  }

  public partial class OffChainQueryInfoChanged : aelf::IEvent<OffChainQueryInfoChanged>
  {
    public global::System.Collections.Generic.IEnumerable<OffChainQueryInfoChanged> GetIndexed()
    {
      return new List<OffChainQueryInfoChanged>
      {
      };
    }

    public OffChainQueryInfoChanged GetNonIndexed()
    {
      return new OffChainQueryInfoChanged
      {
        Token = Token,
        ChainId = ChainId,
        NewOffChainQueryInfo = NewOffChainQueryInfo,
        Sender = Sender,
      };
    }
  }

  public partial class RegisterWhiteListAdded : aelf::IEvent<RegisterWhiteListAdded>
  {
    public global::System.Collections.Generic.IEnumerable<RegisterWhiteListAdded> GetIndexed()
    {
      return new List<RegisterWhiteListAdded>
      {
      };
    }

    public RegisterWhiteListAdded GetNonIndexed()
    {
      return new RegisterWhiteListAdded
      {
        Sender = Sender,
        AddAddress = AddAddress,
      };
    }
  }

  public partial class RegisterWhiteListRemoved : aelf::IEvent<RegisterWhiteListRemoved>
  {
    public global::System.Collections.Generic.IEnumerable<RegisterWhiteListRemoved> GetIndexed()
    {
      return new List<RegisterWhiteListRemoved>
      {
      };
    }

    public RegisterWhiteListRemoved GetNonIndexed()
    {
      return new RegisterWhiteListRemoved
      {
        Sender = Sender,
        RemoveAddress = RemoveAddress,
      };
    }
  }

  #endregion
  /// <summary>
  /// the contract definition: a gRPC service definition.
  /// </summary>
  public static partial class ReportContractContainer
  {
    static readonly string __ServiceName = "ReportContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.InitializeInput> __Marshaller_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.QueryOracleInput> __Marshaller_QueryOracleInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.QueryOracleInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.ConfirmReportInput> __Marshaller_ConfirmReportInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.ConfirmReportInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.RejectReportInput> __Marshaller_RejectReportInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.RejectReportInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::CallbackInput> __Marshaller_CallbackInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CallbackInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.Report> __Marshaller_Report = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.Report.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.MortgageTokensInput> __Marshaller_MortgageTokensInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.MortgageTokensInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.SetSkipMemberListInput> __Marshaller_SetSkipMemberListInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.SetSkipMemberListInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.NodeThreshold> __Marshaller_NodeThreshold = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.NodeThreshold.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.ApplyObserverInput> __Marshaller_ApplyObserverInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.ApplyObserverInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.QuitObserverInput> __Marshaller_QuitObserverInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.QuitObserverInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int64Value> __Marshaller_google_protobuf_Int64Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int64Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.RegisterOffChainAggregationInput> __Marshaller_RegisterOffChainAggregationInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.RegisterOffChainAggregationInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.OffChainAggregationInfo> __Marshaller_OffChainAggregationInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.OffChainAggregationInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.AddOffChainQueryInfoInput> __Marshaller_AddOffChainQueryInfoInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.AddOffChainQueryInfoInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.RemoveOffChainQueryInfoInput> __Marshaller_RemoveOffChainQueryInfoInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.RemoveOffChainQueryInfoInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.ChangeOffChainQueryInfoInput> __Marshaller_ChangeOffChainQueryInfoInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.ChangeOffChainQueryInfoInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.GetMerklePathInput> __Marshaller_GetMerklePathInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.GetMerklePathInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.MerklePath> __Marshaller_aelf_MerklePath = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.MerklePath.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.GetReportInput> __Marshaller_GetReportInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.GetReportInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.GetSignatureInput> __Marshaller_GetSignatureInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.GetSignatureInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.GetOffChainAggregationInfoInput> __Marshaller_GetOffChainAggregationInfoInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.GetOffChainAggregationInfoInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.ReportQueryRecord> __Marshaller_ReportQueryRecord = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.ReportQueryRecord.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.GetCurrentRoundIdInput> __Marshaller_GetCurrentRoundIdInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.GetCurrentRoundIdInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.GetRawReportInput> __Marshaller_GetRawReportInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.GetRawReportInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.GenerateRawReportInput> __Marshaller_GenerateRawReportInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.GenerateRawReportInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.GetSignatureMapInput> __Marshaller_GetSignatureMapInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.GetSignatureMapInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.SignatureMap> __Marshaller_SignatureMap = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.SignatureMap.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.BoolValue> __Marshaller_google_protobuf_BoolValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.BoolValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.IsObserverInput> __Marshaller_IsObserverInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.IsObserverInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.ObserverList> __Marshaller_ObserverList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.ObserverList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.GetSkipMemberListInput> __Marshaller_GetSkipMemberListInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.GetSkipMemberListInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.MemberList> __Marshaller_MemberList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.MemberList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Report.GetObserverMortgagedTokenByRegimentInput> __Marshaller_GetObserverMortgagedTokenByRegimentInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Report.GetObserverMortgagedTokenByRegimentInput.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::EBridge.Contracts.Report.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::EBridge.Contracts.Report.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Report.QueryOracleInput, global::AElf.Types.Hash> __Method_QueryOracle = new aelf::Method<global::EBridge.Contracts.Report.QueryOracleInput, global::AElf.Types.Hash>(
        aelf::MethodType.Action,
        __ServiceName,
        "QueryOracle",
        __Marshaller_QueryOracleInput,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CancelQueryOracle = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CancelQueryOracle",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Report.ConfirmReportInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ConfirmReport = new aelf::Method<global::EBridge.Contracts.Report.ConfirmReportInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ConfirmReport",
        __Marshaller_ConfirmReportInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Report.RejectReportInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RejectReport = new aelf::Method<global::EBridge.Contracts.Report.RejectReportInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RejectReport",
        __Marshaller_RejectReportInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::CallbackInput, global::EBridge.Contracts.Report.Report> __Method_FulfillQuery = new aelf::Method<global::CallbackInput, global::EBridge.Contracts.Report.Report>(
        aelf::MethodType.Action,
        __ServiceName,
        "FulfillQuery",
        __Marshaller_CallbackInput,
        __Marshaller_Report);

    static readonly aelf::Method<global::EBridge.Contracts.Report.MortgageTokensInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_MortgageTokens = new aelf::Method<global::EBridge.Contracts.Report.MortgageTokensInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "MortgageTokens",
        __Marshaller_MortgageTokensInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Report.SetSkipMemberListInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetSkipMemberList = new aelf::Method<global::EBridge.Contracts.Report.SetSkipMemberListInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetSkipMemberList",
        __Marshaller_SetSkipMemberListInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Report.NodeThreshold, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetThreshold = new aelf::Method<global::EBridge.Contracts.Report.NodeThreshold, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetThreshold",
        __Marshaller_NodeThreshold,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::EBridge.Contracts.Report.NodeThreshold> __Method_GetThreshold = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::EBridge.Contracts.Report.NodeThreshold>(
        aelf::MethodType.View,
        __ServiceName,
        "GetThreshold",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_NodeThreshold);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetOwner = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetOwner",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeOwner = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeOwner",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Report.ApplyObserverInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ApplyObserver = new aelf::Method<global::EBridge.Contracts.Report.ApplyObserverInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ApplyObserver",
        __Marshaller_ApplyObserverInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Report.QuitObserverInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_QuitObserver = new aelf::Method<global::EBridge.Contracts.Report.QuitObserverInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "QuitObserver",
        __Marshaller_QuitObserverInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AdjustApplyObserverFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AdjustApplyObserverFee",
        __Marshaller_google_protobuf_Int64Value,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AdjustReportFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AdjustReportFee",
        __Marshaller_google_protobuf_Int64Value,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Report.RegisterOffChainAggregationInput, global::EBridge.Contracts.Report.OffChainAggregationInfo> __Method_RegisterOffChainAggregation = new aelf::Method<global::EBridge.Contracts.Report.RegisterOffChainAggregationInput, global::EBridge.Contracts.Report.OffChainAggregationInfo>(
        aelf::MethodType.Action,
        __ServiceName,
        "RegisterOffChainAggregation",
        __Marshaller_RegisterOffChainAggregationInput,
        __Marshaller_OffChainAggregationInfo);

    static readonly aelf::Method<global::EBridge.Contracts.Report.AddOffChainQueryInfoInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddOffChainQueryInfo = new aelf::Method<global::EBridge.Contracts.Report.AddOffChainQueryInfoInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddOffChainQueryInfo",
        __Marshaller_AddOffChainQueryInfoInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Report.RemoveOffChainQueryInfoInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveOffChainQueryInfo = new aelf::Method<global::EBridge.Contracts.Report.RemoveOffChainQueryInfoInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveOffChainQueryInfo",
        __Marshaller_RemoveOffChainQueryInfoInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Report.ChangeOffChainQueryInfoInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeOffChainQueryInfo = new aelf::Method<global::EBridge.Contracts.Report.ChangeOffChainQueryInfoInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeOffChainQueryInfo",
        __Marshaller_ChangeOffChainQueryInfoInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddRegisterWhiteList = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddRegisterWhiteList",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveFromRegisterWhiteList = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveFromRegisterWhiteList",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeOracleContractAddress = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeOracleContractAddress",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Report.GetMerklePathInput, global::AElf.Types.MerklePath> __Method_GetMerklePath = new aelf::Method<global::EBridge.Contracts.Report.GetMerklePathInput, global::AElf.Types.MerklePath>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMerklePath",
        __Marshaller_GetMerklePathInput,
        __Marshaller_aelf_MerklePath);

    static readonly aelf::Method<global::EBridge.Contracts.Report.GetReportInput, global::EBridge.Contracts.Report.Report> __Method_GetReport = new aelf::Method<global::EBridge.Contracts.Report.GetReportInput, global::EBridge.Contracts.Report.Report>(
        aelf::MethodType.View,
        __ServiceName,
        "GetReport",
        __Marshaller_GetReportInput,
        __Marshaller_Report);

    static readonly aelf::Method<global::EBridge.Contracts.Report.GetSignatureInput, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_GetSignature = new aelf::Method<global::EBridge.Contracts.Report.GetSignatureInput, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSignature",
        __Marshaller_GetSignatureInput,
        __Marshaller_google_protobuf_StringValue);

    static readonly aelf::Method<global::EBridge.Contracts.Report.GetOffChainAggregationInfoInput, global::EBridge.Contracts.Report.OffChainAggregationInfo> __Method_GetOffChainAggregationInfo = new aelf::Method<global::EBridge.Contracts.Report.GetOffChainAggregationInfoInput, global::EBridge.Contracts.Report.OffChainAggregationInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetOffChainAggregationInfo",
        __Marshaller_GetOffChainAggregationInfoInput,
        __Marshaller_OffChainAggregationInfo);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EBridge.Contracts.Report.ReportQueryRecord> __Method_GetReportQueryRecord = new aelf::Method<global::AElf.Types.Hash, global::EBridge.Contracts.Report.ReportQueryRecord>(
        aelf::MethodType.View,
        __ServiceName,
        "GetReportQueryRecord",
        __Marshaller_aelf_Hash,
        __Marshaller_ReportQueryRecord);

    static readonly aelf::Method<global::EBridge.Contracts.Report.GetCurrentRoundIdInput, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetCurrentRoundId = new aelf::Method<global::EBridge.Contracts.Report.GetCurrentRoundIdInput, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCurrentRoundId",
        __Marshaller_GetCurrentRoundIdInput,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::EBridge.Contracts.Report.GetRawReportInput, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_GetRawReport = new aelf::Method<global::EBridge.Contracts.Report.GetRawReportInput, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetRawReport",
        __Marshaller_GetRawReportInput,
        __Marshaller_google_protobuf_StringValue);

    static readonly aelf::Method<global::EBridge.Contracts.Report.GenerateRawReportInput, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_GenerateRawReport = new aelf::Method<global::EBridge.Contracts.Report.GenerateRawReportInput, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GenerateRawReport",
        __Marshaller_GenerateRawReportInput,
        __Marshaller_google_protobuf_StringValue);

    static readonly aelf::Method<global::EBridge.Contracts.Report.GetSignatureMapInput, global::EBridge.Contracts.Report.SignatureMap> __Method_GetSignatureMap = new aelf::Method<global::EBridge.Contracts.Report.GetSignatureMapInput, global::EBridge.Contracts.Report.SignatureMap>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSignatureMap",
        __Marshaller_GetSignatureMapInput,
        __Marshaller_SignatureMap);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_IsInRegisterWhiteList = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "IsInRegisterWhiteList",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_BoolValue);

    static readonly aelf::Method<global::EBridge.Contracts.Report.IsObserverInput, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_IsObserver = new aelf::Method<global::EBridge.Contracts.Report.IsObserverInput, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "IsObserver",
        __Marshaller_IsObserverInput,
        __Marshaller_google_protobuf_BoolValue);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetMortgagedTokenAmount = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMortgagedTokenAmount",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::AElf.Types.Address, global::EBridge.Contracts.Report.ObserverList> __Method_GetObserverList = new aelf::Method<global::AElf.Types.Address, global::EBridge.Contracts.Report.ObserverList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetObserverList",
        __Marshaller_aelf_Address,
        __Marshaller_ObserverList);

    static readonly aelf::Method<global::EBridge.Contracts.Report.GetSkipMemberListInput, global::EBridge.Contracts.Report.MemberList> __Method_GetSkipMemberList = new aelf::Method<global::EBridge.Contracts.Report.GetSkipMemberListInput, global::EBridge.Contracts.Report.MemberList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSkipMemberList",
        __Marshaller_GetSkipMemberListInput,
        __Marshaller_MemberList);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_GetTokenByChainId = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetTokenByChainId",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_StringValue);

    static readonly aelf::Method<global::EBridge.Contracts.Report.GetObserverMortgagedTokenByRegimentInput, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetObserverMortgagedTokenByRegiment = new aelf::Method<global::EBridge.Contracts.Report.GetObserverMortgagedTokenByRegimentInput, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetObserverMortgagedTokenByRegiment",
        __Marshaller_GetObserverMortgagedTokenByRegimentInput,
        __Marshaller_google_protobuf_Int64Value);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::EBridge.Contracts.Report.ReportContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS12.Acs12Reflection.Descriptor.Services[0],
          global::EBridge.Contracts.Report.ReportContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of ReportContract</summary>
    /*public abstract partial class ReportContractBase : AElf.Sdk.CSharp.CSharpSmartContract<EBridge.Contracts.Report.ReportContractState>
    {
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Initialize(global::EBridge.Contracts.Report.InitializeInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Hash QueryOracle(global::EBridge.Contracts.Report.QueryOracleInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty CancelQueryOracle(global::AElf.Types.Hash input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ConfirmReport(global::EBridge.Contracts.Report.ConfirmReportInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RejectReport(global::EBridge.Contracts.Report.RejectReportInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::EBridge.Contracts.Report.Report FulfillQuery(global::CallbackInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty MortgageTokens(global::EBridge.Contracts.Report.MortgageTokensInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetSkipMemberList(global::EBridge.Contracts.Report.SetSkipMemberListInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetThreshold(global::EBridge.Contracts.Report.NodeThreshold input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::EBridge.Contracts.Report.NodeThreshold GetThreshold(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Address GetOwner(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeOwner(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ApplyObserver(global::EBridge.Contracts.Report.ApplyObserverInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty QuitObserver(global::EBridge.Contracts.Report.QuitObserverInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AdjustApplyObserverFee(global::Google.Protobuf.WellKnownTypes.Int64Value input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AdjustReportFee(global::Google.Protobuf.WellKnownTypes.Int64Value input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::EBridge.Contracts.Report.OffChainAggregationInfo RegisterOffChainAggregation(global::EBridge.Contracts.Report.RegisterOffChainAggregationInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddOffChainQueryInfo(global::EBridge.Contracts.Report.AddOffChainQueryInfoInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveOffChainQueryInfo(global::EBridge.Contracts.Report.RemoveOffChainQueryInfoInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeOffChainQueryInfo(global::EBridge.Contracts.Report.ChangeOffChainQueryInfoInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddRegisterWhiteList(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveFromRegisterWhiteList(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeOracleContractAddress(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.MerklePath GetMerklePath(global::EBridge.Contracts.Report.GetMerklePathInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::EBridge.Contracts.Report.Report GetReport(global::EBridge.Contracts.Report.GetReportInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.StringValue GetSignature(global::EBridge.Contracts.Report.GetSignatureInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::EBridge.Contracts.Report.OffChainAggregationInfo GetOffChainAggregationInfo(global::EBridge.Contracts.Report.GetOffChainAggregationInfoInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::EBridge.Contracts.Report.ReportQueryRecord GetReportQueryRecord(global::AElf.Types.Hash input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetCurrentRoundId(global::EBridge.Contracts.Report.GetCurrentRoundIdInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.StringValue GetRawReport(global::EBridge.Contracts.Report.GetRawReportInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.StringValue GenerateRawReport(global::EBridge.Contracts.Report.GenerateRawReportInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::EBridge.Contracts.Report.SignatureMap GetSignatureMap(global::EBridge.Contracts.Report.GetSignatureMapInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.BoolValue IsInRegisterWhiteList(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.BoolValue IsObserver(global::EBridge.Contracts.Report.IsObserverInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetMortgagedTokenAmount(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::EBridge.Contracts.Report.ObserverList GetObserverList(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::EBridge.Contracts.Report.MemberList GetSkipMemberList(global::EBridge.Contracts.Report.GetSkipMemberListInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.StringValue GetTokenByChainId(global::Google.Protobuf.WellKnownTypes.StringValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetObserverMortgagedTokenByRegiment(global::EBridge.Contracts.Report.GetObserverMortgagedTokenByRegimentInput input)
      {
        throw new global::System.NotImplementedException();
      }

    }

    public static aelf::ServerServiceDefinition BindService(ReportContractBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors)
          .AddMethod(__Method_Initialize, serviceImpl.Initialize)
          .AddMethod(__Method_QueryOracle, serviceImpl.QueryOracle)
          .AddMethod(__Method_CancelQueryOracle, serviceImpl.CancelQueryOracle)
          .AddMethod(__Method_ConfirmReport, serviceImpl.ConfirmReport)
          .AddMethod(__Method_RejectReport, serviceImpl.RejectReport)
          .AddMethod(__Method_FulfillQuery, serviceImpl.FulfillQuery)
          .AddMethod(__Method_MortgageTokens, serviceImpl.MortgageTokens)
          .AddMethod(__Method_SetSkipMemberList, serviceImpl.SetSkipMemberList)
          .AddMethod(__Method_SetThreshold, serviceImpl.SetThreshold)
          .AddMethod(__Method_GetThreshold, serviceImpl.GetThreshold)
          .AddMethod(__Method_GetOwner, serviceImpl.GetOwner)
          .AddMethod(__Method_ChangeOwner, serviceImpl.ChangeOwner)
          .AddMethod(__Method_ApplyObserver, serviceImpl.ApplyObserver)
          .AddMethod(__Method_QuitObserver, serviceImpl.QuitObserver)
          .AddMethod(__Method_AdjustApplyObserverFee, serviceImpl.AdjustApplyObserverFee)
          .AddMethod(__Method_AdjustReportFee, serviceImpl.AdjustReportFee)
          .AddMethod(__Method_RegisterOffChainAggregation, serviceImpl.RegisterOffChainAggregation)
          .AddMethod(__Method_AddOffChainQueryInfo, serviceImpl.AddOffChainQueryInfo)
          .AddMethod(__Method_RemoveOffChainQueryInfo, serviceImpl.RemoveOffChainQueryInfo)
          .AddMethod(__Method_ChangeOffChainQueryInfo, serviceImpl.ChangeOffChainQueryInfo)
          .AddMethod(__Method_AddRegisterWhiteList, serviceImpl.AddRegisterWhiteList)
          .AddMethod(__Method_RemoveFromRegisterWhiteList, serviceImpl.RemoveFromRegisterWhiteList)
          .AddMethod(__Method_ChangeOracleContractAddress, serviceImpl.ChangeOracleContractAddress)
          .AddMethod(__Method_GetMerklePath, serviceImpl.GetMerklePath)
          .AddMethod(__Method_GetReport, serviceImpl.GetReport)
          .AddMethod(__Method_GetSignature, serviceImpl.GetSignature)
          .AddMethod(__Method_GetOffChainAggregationInfo, serviceImpl.GetOffChainAggregationInfo)
          .AddMethod(__Method_GetReportQueryRecord, serviceImpl.GetReportQueryRecord)
          .AddMethod(__Method_GetCurrentRoundId, serviceImpl.GetCurrentRoundId)
          .AddMethod(__Method_GetRawReport, serviceImpl.GetRawReport)
          .AddMethod(__Method_GenerateRawReport, serviceImpl.GenerateRawReport)
          .AddMethod(__Method_GetSignatureMap, serviceImpl.GetSignatureMap)
          .AddMethod(__Method_IsInRegisterWhiteList, serviceImpl.IsInRegisterWhiteList)
          .AddMethod(__Method_IsObserver, serviceImpl.IsObserver)
          .AddMethod(__Method_GetMortgagedTokenAmount, serviceImpl.GetMortgagedTokenAmount)
          .AddMethod(__Method_GetObserverList, serviceImpl.GetObserverList)
          .AddMethod(__Method_GetSkipMemberList, serviceImpl.GetSkipMemberList)
          .AddMethod(__Method_GetTokenByChainId, serviceImpl.GetTokenByChainId)
          .AddMethod(__Method_GetObserverMortgagedTokenByRegiment, serviceImpl.GetObserverMortgagedTokenByRegiment).Build();
    }*/

  }
}
#endregion

